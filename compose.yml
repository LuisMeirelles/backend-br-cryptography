services:
  php:
    build:
      context: ./.docker/php
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    volumes:
      - .:/usr/share/nginx/html
    working_dir: /usr/share/nginx/html
    env_file:
      - .env
    networks:
      - app-network

  nginx:
    build:
      context: ./.docker/nginx
      args:
        SERVER_NAME: ${SERVER_NAME}
        ENVIRONMENT: ${ENVIRONMENT}
    volumes:
      - .:/usr/share/nginx/html
      - certs:/etc/letsencrypt
      - certs:/etc/ssl/private
      - certs:/etc/ssl/certs
      - ./.docker/nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
    working_dir: /usr/share/nginx/html
    ports:
      - "443:443"
    networks:
      - app-network
    env_file:
      - .env
    depends_on:
      - certbot
    entrypoint: "/bin/sh /usr/share/nginx/wait-for-certbot.sh"

  database:
    image: mariadb:lts
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
      MYSQL_DATABASE: $DB_DATABASE
    ports:
      - '3306:3306'
    volumes:
      - 'mysql_data:/var/lib/mysql'
    networks:
      - app-network

  certbot:
    build:
      context: ./.docker/certbot
      args:
        EMAIL: ${EMAIL}
        SERVER_NAME: ${SERVER_NAME}
    volumes:
      - certs:/etc/letsencrypt
      - certs:/etc/ssl/private
      - certs:/etc/ssl/certs
    ports:
      - "80:80"
    env_file:
      - .env
    entrypoint: "/bin/sh /usr/local/bin/entrypoint.sh"

networks:
  app-network:

volumes:
  certs:
  mysql_data:
